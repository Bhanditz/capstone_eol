= content_for :head do
  = javascript_include_tag "taxonomy", "permalink", "worklist"
/ - # FIXME Placeholder of static markup direct from HashRocket replace with functioning code
#content
  #worklist.site_column
    .filters
      %form(action="" method="post")
        %fieldset
          %dl
            %dt
              %label Object type
            %dd
              %select
                - ['All types', 'Taxa', 'Images', 'Videos', 'Sounds', 'People', 'Communities', 'Collections'].each do |option|
                  %option= option
          %dl
            %dt
              %label Object status
            %dd
              %select
                - ['Unreviewed', 'Trusted', 'Untrusted'].each do |option|
                  %option= option
          %dl
            %dt
              %label Object visibility
            %dd
              %select
                - ['Visible', 'Hidden'].each do |option|
                  %option= option
          %dl
            %dt
              %label Task status
            %dd
              %select
                - ['Active', 'Ignored', 'Curated'].each do |option|
                  %option= option
        %fieldset.actions
          %input(type="submit" value="show tasks")
          %p 1430 tasks found
    #tasks
      %ul
        - @worklist_tasks.first(10).each do |worklist_task|
          - en_type = en_type(worklist_task)
          - task_class = @current_task.id == worklist_task.id ? "#{en_type} active" : en_type
          %li{:class => task_class}          
            - if ['image', 'video', 'sound'].include?(en_type)
              = render :partial => "media_data_object.html.haml", :locals => { :item => worklist_task, :en_type => en_type }
            - else
              = render :partial => "#{en_type}_data_object.html.haml", :locals => { :item => worklist_task }
        / %li.article.ignored
        /   %span.icon
        /   %span.indicator Ignored
        /   %p
        /     = link_to "Cairina moschata", "#"
        /     Overview
        / %li.article
        /   %span.icon
        /   %p
        /     = link_to "Mergus serrator", "#"
        /     34 common names
        / %li.image.active
        /   %span.icon
        /   /= image_tag dummy_image(48, 48), alt: ""
        /   %p
        /     = link_to "Duck in the water", "#"
        /     image from Flickr
        / %li.sound
        /   %span.icon
        /   %p
        /     = link_to "Duck quacking wildly", "#"
        /     sound from DuckSounds
        / %li.video
        /   %span.icon
        /   /= image_tag dummy_image(48, 48), alt: ""
        /   %p
        /     = link_to "Duck being duck-like", "#"
        /     this duck is so duck-like
        / %li.article.saved
        /   %span.icon
        /   %span.indicator Saved
        /   %p
        /     = link_to "Mergus serrator", "#"
        /     34 common names
        / %li.article.image
        /   %span.icon
        /   %p
        /     = link_to "Duck in the water", "#"
        /     sound from DuckSounds
        / %li.image
        /   %span.icon
        /   /= image_tag dummy_image(48, 48), alt: ""
        /   %p
        /     = link_to "Duck in the water", "#"
        /     image from Flickr
        / %li.sound
        /   %span.icon
        /   %p
        /     = link_to "Duck quacking wildly", "#"
        /     sound from DuckSounds
      %p.more= link_to I18n.t(:get_more_tasks), "#", {:class => "button"}
    .article#task
      .media
        - # TODO : Fix this. Image thumbnail should be 520_360.
        - if thumb = @current_task.thumb_or_object('large')
          = image_tag(thumb)
      = render :partial => 'data_objects/rating', :locals => { :data_object => @current_task }
      = render :partial => 'data_objects/description.html.haml', :locals => { :data_object => @current_task, :en_type => en_type(@current_task) }
      .article.source
        .header
          %h3= I18n.t(:source_information_header)
        = render :partial => 'data_objects/attribution', :locals => { :data_object => @current_task }
        - if @current_task.is_image?
          %p= link_to I18n.t(:view_full_size_image), @current_task.thumb_or_object(:orig)
        - if @current_task.is_sound?
          - en_mime_type = @current_task.mime_type ? @current_task.mime_type.label('en') : DataType.sound.simple_type
          %p= link_to I18n.t("download_#{en_mime_type.sub(/\//, '_')}"), @current_task.sound_url, { :title => I18n.t("download_#{en_mime_type.sub(/\//, '_')}_assistive") }
      = render :partial => 'data_objects/list_associations', :locals => { :data_object => @current_task, :en_type => en_type(@current_task) }
      - revisions = @current_task['revisions']
      - unless revisions.blank?
        = render :partial => 'data_objects/revisions', :locals => { :data_object => @current_task, :revisions => revisions }