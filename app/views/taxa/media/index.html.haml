- # TODO: Optionally integrate HashRocket rating.js it must be I18nized and allow anonymous users to login after submitting a rating.
= content_for :head do
  = javascript_include_tag "exemplar_image.js"
#media_list
  #sidebar.filters
    = image_tag @exemplar_image.thumb_or_object('260_190') unless @exemplar_image.blank?
    %h3= I18n.t(:media)
    = render :partial => "media_sort_filter"
  #main
    .header
      - start_number = (@media.current_page - 1) * @media.per_page + 1
      - end_number = [ (start_number + @media.per_page - 1), @media_total ].min
      %h3= I18n.t(:displaying_numerical_range, :start_number => start_number, :end_number => end_number, :total => @media_total)
      = will_paginate @media, :previous_label => I18n.t(:pagination_previous), :next_label => I18n.t(:pagination_next),
        :inner_window => 2, :outer_window => 2
    %ul.media
      - @media.each_with_index do |item, index|
        %li{:class => index.modulo(4) == 0 ? 'first' : nil}
          .figure
            = render :partial => "taxa/media_thumbnail", :locals => {:item => item}
            - if item.data_type.id == DataType.image.id && current_user.is_curator?
              - form_for :taxon_concept_exemplar_image, :url => set_as_exemplar_taxon_media_path(@taxon_concept),
                :html => {:class => 'taxon_concept_exemplar_image'} do |f|
                .overlay
                %label
                  = f.radio_button :data_object_id, item.id, { :checked => @exemplar_image.id == item.id }
                  = I18n.t(:set_as_exemplar)
                %fieldset.actions
                  = f.submit I18n.t(:set_as_exemplar), { :class => 'assistive' }
          = render :partial => 'data_objects/rating', :locals => { :data_object => item, :minimal => true }
          %p.flag{:class => vetted_id_class(item.vetted_id)}= item.vetted.label
          = render :partial => 'shared/add_to_my_collection', :locals => { :item => item, :my_collection => @watch_collection }
    .footer
      = will_paginate @media, :previous_label => I18n.t(:pagination_previous), :next_label => I18n.t(:pagination_next),
        :inner_window => 4, :outer_window => 5
