#page-title
  - type = @type
  - type = 'Video' if ['youtube', 'flash', 'video'].include? @type.downcase
  %h1== #{type} permalink. 
  %h2
    / this probably should not happen anymore
    - if @taxon_concepts.blank?
      ( stands alone )
    - else
      - start_text = @revisions[0].id == @data_object.id ? 'belongs to ' : 'was connected to '
      == ( #{start_text} the following page#{@taxon_concepts.size == 1 ? '' : 's'}: 
      - @taxon_concepts.each_with_index do |tc, i|
        - comma = (i+1 == @taxon_concepts.size) ? '' : ', '
        - link_title = tc.scientific_name
        - link_title += ": <b>#{tc.common_name}</b>" unless tc.common_name.blank?
        = link_to(link_title, taxon_concept_path(tc.id)) + comma
      )
      
#page-content.clearfix
  #full-page-content
    #data_object_wrapper
      #data_object_status
        .divider
        %h3 Curation status
        - status = @data_object.vetted.label.downcase
        - bg_class = []
        %p
          - if status == 'unknown'
            == This #{type.downcase} is not reviewed.
            - bg_class << 'unknown-text'
          - else
            == This #{type.downcase} is #{status}.
            - bg_class << 'untrusted-text' if status == 'untrusted'
      #data_object_content
        .divider
        %h3 Content
        - bg_class = bg_class.join(' ')
        - bg_class = nil if bg_class.blank?
        #data_object{ :class => bg_class }
          = render :partial => "data_objects/data_object_#{type.downcase}", :locals => { :data_object => @data_object, :taxon_concepts => @taxon_concepts }
      #data_object_attribution
        .divider 
        %h3 Attribution
        = render :partial => 'attribution', :locals => { :data_object => @data_object }, :layout => @layout
        %br
      - unless @hierarchy.blank?
        #data_object_hierarchy
          .divider
          %h3 Hierarchy according to the contributor
          %p= @hierarchy
      - if @revisions.size > 1
        #data_object_revisions
          .divider 
          %h3 Revisions
          %ul
            - @revisions.each do |revision|
              - revision_class = revision.created_at == @data_object.created_at ? 'current_revision' : nil
              %li{ :class => revision_class }= link_to(revision.created_at, data_object_path(revision.id))
      - unless @comments.blank?
        #data_object_comments
          .divider
          %h3 Comments
          #taxaCommentsWrap
            #commentsContain
              = render :partial => 'shared/comments', :locals => { :comments => @comments, :opts => { :params => {:anchor => "commentsContain"} }}
