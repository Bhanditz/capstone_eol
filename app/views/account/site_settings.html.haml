:javascript
  function auto_check_filter_box_if_needed() {
    checkbox = $('#user_filter_content_by_hierarchy');
    if ($('#user_default_hierarchy_id').val() == '0' && checkbox.attr('checked')) {
      checkbox.click(); // Setting the val on checkboxes "works", but the user can't see it.  This does both.
    }
    if ($('#user_default_hierarchy_id').val() != '0' && !checkbox.attr('checked')) {
      checkbox.click();
    }
  }
- form_for :user, :html=>{:class=>"single_body_form warning-warn invalid-invalid styleLabelOnErr"} do |f|
  %label{ :title => I18n.t(:do_you_want_to_receive_eol_notifications) , :for => "user_mailing_list" }
    = I18n.t(:do_you_want_to_receive_eol_notifications)
  = f.check_box :mailing_list
  =  I18n.t(:yes_answer)
  %p
    %br
  %label{ :title => I18n.t(:if_there_are_comments_or_curator_actions_on_your_contributions_how_often_would_you_like_to_receive_email_alerts) , :for => "user_email_reports_frequency_hours" }
    = I18n.t(:if_there_are_comments_or_curator_actions_on_your_contributions_how_often_would_you_like_to_receive_email_alerts)
  - select_options = [['Never', 0] , ['Daily', 1*24], ['Weekly', 7*24], ['Monthly', 30*24]]
  = f.select :email_reports_frequency_hours, select_options

  %br
  %br
  = I18n.t(:browse_classification_and_filtering_settings)
  %br
  #filtering_help
    %p= I18n.t("eol_has_the_ability_to_filter_")
    %p= I18n.t("for_instance__if_you_choose_a_")
    %p= I18n.t("you_can_also_choose_two_classi")

  %label{ :title =>  I18n.t(:classification_preference_advisory_information) , :for => "user_default_hierarchy_id" }
    =  I18n.t(:classification_preference_question)
  = f.select :default_hierarchy_id, [['-- always use default --', 0]] + Hierarchy.find_all_by_browsable(1).sort_by{|h| h.form_label}.collect {|h| [h.form_label, h.id]},{},{:onchange => 'javascript:auto_check_filter_box_if_needed();'}

  - if $ALLOW_SECOND_HIERARCHY
    %label{ :for => "user_secondary_hierarchy_id", :title =>  I18n.t(:secondary_hierarchy_preference) }
      =  I18n.t(:classification_preference_question)
    = f.select :secondary_hierarchy_id, [['-- none --', 0]] + Hierarchy.browsable_by_label.collect {|h| [h.label, h.id]}
  = f.label :filter_content_by_hierarchy,  I18n.t(:filter_content_by_classification_preference)
  = f.check_box :filter_content_by_hierarchy

  %br
  %br
  = I18n.t(:language_settings)
  %br
  %label{ :title =>  I18n.t(:language_preference_advisory_information), :for => "user_language_abbr" }
    =  I18n.t(:language_preference)
  = f.select :language_abbr, Language.find_active.collect {|l| [l.source_form, l.iso_639_1]}

  .button
    = submit_tag I18n.t(:update_account)
= render(:partial => 'set_api_settings')
