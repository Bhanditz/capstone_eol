#choose_collections
  %h2= I18n.t(:add_item_to_new_collection, :item => @item.summary_name)
  - form_for Collection.new do |collection_form|
    = collection_form.hidden_field :user_id, :value => current_user.id
    = hidden_field_tag :item_id, @item.id
    = hidden_field_tag :item_type, @item.class.name
    %fieldset.new_collection
      = collection_form.label :name, I18n.t(:collection_name_label), {:class => 'assistive'}
      = collection_form.text_field :name
      = submit_tag I18n.t(:create_collection_button), :class => 'button'
  - @collections ||= []
  - collections = @collections.reject {|c| c.id == @collection.id }
  - unless collections.empty?
    - form_for(CollectionItem.new(:object => @item)) do |f|
      = f.hidden_field :object_id
      = f.hidden_field :object_type
      %h2= I18n.t(:or_add_it_to_an_existing_collection)
      %fieldset
        %ul
          = render :partial => 'collection_choose_collect_target_list_item', :locals => { :collection => current_user.watch_collection, :has_item => current_user.watch_collection.has_item?(@item) }
          - collections.reject {|c| c.id == current_user.watch_collection.id }.each do |collection|
            = render :partial => 'collection_choose_collect_target_list_item', :locals => { :collection => collection, :has_item => collection.has_item?(@item) }
      %fieldset.actions
        = link_to(I18n.t(:see_all_of_your_collections), user_collections_path(current_user), :class => 'other_actions')
        = submit_tag(I18n.t(:collect_item))
        %a.close{:href => "#"}= I18n.t(:go_back)
