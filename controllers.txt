app/controllers/application_controller.rb:        c.send(:access_denied) # You must send the method, otherwise flashes and redirects don't work.
app/controllers/application_controller.rb:    flash[:warning] =  I18n.t(:must_be_logged_in) 
app/controllers/application_controller.rb:    flash[:warning] = I18n.t(:you_are_not_authorized_to_perform_this_action) 
app/controllers/application_controller.rb:          %w{text}.each do |default_taxonomic_browser| # NOTE - this used to include flash, but we don't use it anymore.
app/controllers/application_controller.rb:    flash[:warning] =  I18n.t(:user_system_down) 
app/controllers/application_controller.rb:    flash.now[:warning] = I18n.t(:you_are_not_authorized_to_perform_this_action) 
app/controllers/members_controller.rb:      flash[:error] =  I18n.t(:cannot_find_member) 
app/controllers/resources_controller.rb:        flash[:notice] = I18n.t(:warning_you_attempted_to_create_a_link_from_this_resource_to_two_agents_only_one_allowed) 
app/controllers/resources_controller.rb:          flash[:notice] = "Resource is scheduled to be published"
app/controllers/resources_controller.rb:          flash[:notice] = "Resource is scheduled to be unpublished"
app/controllers/navigation_controller.rb:  # caches_page :flash_tree_view
app/controllers/tags_controller.rb:        flash[:notice] = 'New tag was successfully created'
app/controllers/tags_controller.rb:        flash[:notice] = e.message
app/controllers/tags_controller.rb:          flash[:notice] = "Successfully removed tag #{ params[:id] }"
app/controllers/administrator/contact_controller.rb:    flash[:notice]='The message was sent.'
app/controllers/administrator/contact_controller.rb:    flash[:error]='Please enter a message and email address.'  
app/controllers/administrator/glossary_controller.rb:      flash[:error] = 'Term cannot be left blank'
app/controllers/administrator/glossary_controller.rb:      flash[:error] = "`#{params[:glossary_term][:term]}` is already defined"
app/controllers/administrator/glossary_controller.rb:      flash[:notice] = 'The glossary term was successfully updated.'
app/controllers/administrator/content_upload_controller.rb:      flash[:notice] = I18n.t(:the_content_was_updated) 
app/controllers/administrator/content_upload_controller.rb:      flash[:notice] = I18n.t(:the_file_was_uploaded) 
app/controllers/administrator/user_controller.rb:      flash[:notice] = "The new user was created."
app/controllers/administrator/user_controller.rb:      flash[:notice] = "The user was updated."
app/controllers/administrator/user_controller.rb:        flash[:notice] = "You have been logged in as #{user.username}"
app/controllers/administrator/content_page_controller.rb:     flash[:notice] = 'Content has been updated.'
app/controllers/administrator/content_page_controller.rb:     flash[:error] = 'Some required fields were not entered (you must enter a title, and content OR a URL).'
app/controllers/administrator/role_controller.rb:      flash[:notice] = 'The role was successfully created.'
app/controllers/administrator/role_controller.rb:      flash[:notice] = 'The role was successfully updated.'
app/controllers/administrator/news_item_controller.rb:      flash[:notice] = 'The news item was successfully created.'
app/controllers/administrator/news_item_controller.rb:      flash[:notice] = 'The news item was successfully updated.'
app/controllers/administrator/content_partner_report_controller.rb:      flash[:notice] = I18n.t(:profile_updated) 
app/controllers/administrator/content_partner_report_controller.rb:        flash[:notice]='Content partner agreement was updated.'
app/controllers/administrator/contact_subject_controller.rb:     flash[:notice] = "The new topic was created."
app/controllers/administrator/contact_subject_controller.rb:      flash[:notice] = "The topic was updated."     
app/controllers/administrator/search_suggestion_controller.rb:      flash[:notice] = 'The search suggestion was successfully created.'
app/controllers/administrator/search_suggestion_controller.rb:      flash[:notice] = 'The search suggestion was successfully updated.'
app/controllers/administrator/comment_controller.rb:      flash[:notice] = 'The comment was successfully updated.'
app/controllers/administrator/hierarchy_controller.rb:        flash[:notice] = "Hierarchy updated"
app/controllers/content_partner_controller.rb:      flash[:warning] = "The agreement for this partner is not available."
app/controllers/content_partner_controller.rb:      flash[:notice] = "Contact created"
app/controllers/content_partner_controller.rb:      flash[:notice] = "Contact updated"
app/controllers/content_partner_controller.rb:      flash[:notice] = "Contact deleted"
app/controllers/content_partner_controller.rb:      flash[:error] = "You must have at least one contact"
app/controllers/content_partner_controller.rb:      flash[:notice] = I18n.t(:welcome) 
app/controllers/content_partner_controller.rb:      flash[:notice] = "Logged in successfully as #{self.current_agent.full_name}"
app/controllers/content_partner_controller.rb:      flash.now[:error] = 'Either your content partner login credentials are incorrect or your account was inactivated.  If you are trying to login as an EOL user or curator, use the login link at the top of the page.'
app/controllers/content_partner_controller.rb:    flash[:notice] = "You have been logged out."
app/controllers/content_partner_controller.rb:      flash[:notice] = "A new password has been emailed to you at {email}."[:new_password_emailed, @agent.email]
app/controllers/content_partner_controller.rb:      flash[:error] = "Unknown username or project name"
app/controllers/content_partner_controller.rb:      flash[:notice] = I18n.t(:profile_updated) 
app/controllers/users_controller.rb:        flash[:notice] = "User #{@user.username} was successfully updated."
app/controllers/users_controller.rb:        flash[:error] = "User #{@user.username} was not updated."
app/controllers/taxa_controller.rb:      :hierarchies_content => [ :content_level, :image, :text, :child_image, :map, :youtube, :flash ],
app/controllers/taxa_controller.rb:    flash[:notice] =  I18n.t(:your_preferences_have_been_updated)  if params[:from_taxa_page].blank?
app/controllers/taxa_controller.rb:        flash[:error] = "User #{current_user.full_name} does not have enough privileges to add a common name to the taxon"
app/controllers/taxa_controller.rb:        flash[:warning] = "Image not found"
app/controllers/taxa_controller.rb:        flash[:warning] = "Image is no longer available"
app/controllers/taxa_controller.rb:        flash[:warning] = "Text is no longer available"
app/controllers/content_controller.rb:      flash[:notice] =  I18n.t(:thanks_for_feedback) 
app/controllers/content_controller.rb:      flash[:notice] =  I18n.t(:your_message_was_sent) 
app/controllers/content_controller.rb:      flash.now[:error] =  I18n.t(:donation_error) 
app/controllers/content_controller.rb:      flash.now[:error] =  I18n.t(:donation_error2) 
app/controllers/content_controller.rb:        flash[:notice] = "Wikipedia article #{matches[1]} revision #{matches[2]} will be harvested tonight"
app/controllers/content_controller.rb:        flash[:notice] = "Revision URL must match http://en.wikipedia.org/w/index.php?title=*TITLE*&oldid=*OLDID*"
app/controllers/account_controller.rb:    flash[:notice] =  I18n.t(:you_have_been_logged_out) 
app/controllers/account_controller.rb:        flash[:notice] =  I18n.t(:reset_password_instructions_emailed) 
app/controllers/account_controller.rb:        redirect_to root_url(:protocol => "http")  # need protocol for flash to survive
app/controllers/account_controller.rb:        flash.now[:notice] =  I18n.t(:cannot_find_user_or_email) 
app/controllers/account_controller.rb:      flash[:notice] = I18n.t(:your_information_has_been_updated_thank_you_for_contributing_to_eol) 
app/controllers/account_controller.rb:      flash[:notice] =  I18n.t(:your_preferences_have_been_updated) 
app/controllers/account_controller.rb:    flash[:notice] =  I18n.t(:expired_reset_password_link) 
app/controllers/account_controller.rb:    flash[:notice] = notice_message
app/controllers/account_controller.rb:    flash[:warning] = message
