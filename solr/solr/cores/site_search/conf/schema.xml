<?xml version="1.0" encoding="utf-8"?>
<schema name="site_search" version="1.0">
    
    <!-- define data types -->
    <types>
        <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
        <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>
        <fieldType name="integer" class="solr.IntField" omitNorms="true"/>
        <fieldType name="float" class="solr.FloatField" omitNorms="true"/>
        
        <!-- this is our main text type with all the taxon name filters -->
        <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
            <analyzer type="index">
                <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                <filter class="solr.ISOLatin1AccentFilterFactory"/>
                <!-- split up bi-maculata, 2maculata, 1766c, etc. -->
                <filter class="solr.WordDelimiterFilterFactory"
                    generateWordParts="1" generateNumberParts="1" catenateWords="1"
                    catenateNumbers="1" catenateAll="0" splitOnCaseChange="1" splitOnNumerics="1" preserveOriginal="1"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.WhitespaceTokenizerFactory"/>
                <filter class="solr.ISOLatin1AccentFilterFactory"/>
                <!-- don't need the extra catenation on search - increase performance -->
                <filter class="solr.WordDelimiterFilterFactory"
                    generateWordParts="1" generateNumberParts="1" catenateWords="0"
                    catenateNumbers="0" catenateAll="0" splitOnCaseChange="1" splitOnNumerics="1" preserveOriginal="1"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
            </analyzer>
        </fieldType>
        
        <!-- This is our *exact* text field, with limited tokenizers.
          Thought about whitespace tokenizer, but I think that would defeat the purpose! "Felis familiaris" would match on
          "felis", I think. Downside is, "felis familaris" won't match "felis     familiaris". -->
        <fieldType name="textExact" class="solr.TextField" positionIncrementGap="4">
            <analyzer type="index">
                <tokenizer class="solr.KeywordTokenizerFactory"/>
                <filter class="solr.ISOLatin1AccentFilterFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.TrimFilterFactory"/>
            </analyzer>
            <analyzer type="query">
                <tokenizer class="solr.KeywordTokenizerFactory"/>
                <filter class="solr.ISOLatin1AccentFilterFactory"/>
                <filter class="solr.LowerCaseFilterFactory"/>
                <filter class="solr.TrimFilterFactory"/>
            </analyzer>
        </fieldType>
    </types>
    
    <!-- begin schema -->
    <fields>
        <field name="keyword_type" type="string" indexed="true" stored="true" required="true"/>
        <field name="keyword" type="text" indexed="true" stored="true" required="true" multiValued="true"/>
        <field name="keyword_exact" type="textExact" indexed="true" stored="true" required="true" multiValued="true"/>
        <copyField source="keyword" dest="keyword_exact"/>
        <field name="full_text" type="text" indexed="true" stored="true" required="false"/>
        <field name="language" type="string" indexed="true" stored="true" required="true"/>
        <field name="resource_type" type="string" indexed="true" stored="true" required="true"/>
        <field name="resource_id" type="integer" indexed="true" stored="true" required="true"/>
    </fields>
    
    <!-- no unique key -->
    <uniqueKey/>
    
    <!-- default unqualified search field -->
    <defaultSearchField>keyword</defaultSearchField>
</schema>
